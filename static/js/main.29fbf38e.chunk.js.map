{"version":3,"sources":["services/axios.ts","services/context.ts","Components/Users/searchName.ts","styles/GlobalStyle.ts","styles/Status.ts","Components/Status/Status.tsx","styles/Header.ts","Components/Header/Header.tsx","data/cardsData.ts","styles/Users.ts","Components/Users/CardsItems.tsx","Components/Users/ListCards.tsx","Components/Users/Users.tsx","Components/App.tsx","index.tsx"],"names":["axios","Axios","create","Context","createContext","usersList","searchRef","searchName","event","node","current","inputValue","currentTarget","value","iterableUsers","querySelectorAll","trim","forEach","child","innerText","toLowerCase","indexOf","closest","style","display","GlobalStyle","createGlobalStyle","StatusMessage","styled","div","Text","p","Status","message","spinner","Container","Spinner","animation","role","variant","className","HeaderWrapper","header","HeaderInner","InnerText","span","InnerIcon","Header","aria-label","CARDS_DATA","eventKey","title","min","max","disabled","UsersWrapper","UsersHeadings","HeadingSearch","HeadingFavorite","UsersList","ListFavorites","ListWrapper","MyCard","Card","props","css","MyCardBody","Body","CardWrapper","CardImg","CardInfo","InfoInline","InlineName","InlineRegistered","InfoBlock","BlockMail","CardsItems","listProps","useContext","map","registered","age","date","email","name","first","last","medium","picture","data-wrapper","src","alt","data-text","moment","format","ListCards","ref","Accordion","defaultActiveKey","Toggle","as","Collapse","Users","type","placeholder","onInput","App","useRef","useState","setUsersList","error","setError","loaded","setLoaded","useEffect","get","then","response","data","length","sortData","results","catch","err","request","sort","prev","next","Provider","render","document","getElementById"],"mappings":"wOAIeA,E,OAFcC,EAAMC,SCSpBC,EANCC,wBAAwB,CACpCC,UAAW,GACXC,UAAW,KACXC,WAAY,SAACC,EAAoCF,OCatCC,EAlBI,SAACC,EAAoCF,GACpD,IAAMG,EAAuBH,EAAUI,QACjCC,EAAqBH,EAAMI,cAAcC,MACzCC,EAA4CL,EAAKM,iBAAiB,eAEpEJ,EAAWK,OACXF,EAAcG,SAAQ,SAACC,GACnB,OACuF,IAAnFA,EAAMC,UAAUC,cAAcJ,OAAOK,QAAQV,EAAWS,cAAcJ,QAClEE,EAAMI,QAAQ,kBAAkBC,MAAMC,QAAU,OAChDN,EAAMI,QAAQ,kBAAkBC,MAAMC,QAAU,UAI5DV,EAAcG,SAAQ,SAACC,GAAD,OAAwBA,EAAMI,QAAQ,kBAAkBC,MAAMC,QAAU,W,cCdzFC,EAAcC,YAAH,szD,eCAXC,EAAgBC,IAAOC,IAAV,iLAUbC,EAAOF,IAAOG,EAAV,wE,OCLJC,EAAS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,QAC9B,OACI,cAACC,EAAA,EAAD,UACI,cAACR,EAAD,UACCO,EACG,cAACE,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,QAAQ,UAAlD,SACI,sBAAMC,UAAU,UAAhB,SAA2BP,MAG/B,cAACH,EAAD,UAAOG,SCdVQ,EAAgBb,IAAOc,OAAV,+HAMbC,EAAcf,IAAOC,IAAV,mGAMXe,EAAYhB,IAAOiB,KAAV,qWAmBTC,EAAYlB,IAAOiB,KAAV,sSCzBTE,EAAS,WAClB,OACI,cAACN,EAAD,UACI,cAACN,EAAA,EAAD,UACI,eAACQ,EAAD,WACI,cAACC,EAAD,4JACA,cAACE,EAAD,CAAWR,KAAK,MAAMU,aAAW,SAAjC,kC,gBCZPC,EAAgC,CACzC,CACIC,SAAU,IACVC,MAAO,OACPC,IAAK,EACLC,IAAK,GACLC,UAAU,GAEd,CACIJ,SAAU,IACVC,MAAO,QACPC,IAAK,GACLC,IAAK,GACLC,UAAU,GAEd,CACIJ,SAAU,IACVC,MAAO,QACPC,IAAK,GACLC,IAAK,GACLC,UAAU,GAEd,CACIJ,SAAU,IACVC,MAAO,QACPC,IAAK,GACLC,IAAK,GACLC,UAAU,I,iBCzBLC,GAAe3B,IAAOC,IAAV,uJAOZ2B,GAAgB5B,IAAOC,IAAV,uJAQb4B,GAAgB7B,IAAOC,IAAV,ocAsBb6B,GAAkB9B,IAAOiB,KAAV,6MAWfc,GAAY/B,IAAOC,IAAV,wJAOT+B,GAAgBhC,IAAOC,IAAV,8BAIbgC,GAAcjC,IAAOC,IAAV,6CAIXiC,GAASlC,YAAOmC,IAAPnC,CAAH,yNAUb,SAAAoC,GAAK,OAAIA,EAAMV,UAAYW,YAAlB,yFAMFC,GAAatC,YAAOmC,IAAKI,KAAZvC,CAAH,8KAWVwC,GAAcxC,IAAOC,IAAV,kfA0BXwC,GAAUzC,IAAOC,IAAV,oQAePyC,GAAW1C,IAAOC,IAAV,6EAKR0C,GAAa3C,IAAOC,IAAV,kKASV2C,GAAa5C,IAAOG,EAAV,qPAaV0C,GAAmB7C,IAAOG,EAAV,kXAqBhB2C,GAAY9C,IAAOC,IAAV,0IAOT8C,GAAY/C,IAAOG,EAAV,iNC9KT6C,GAAa,SAAC,GAA4C,IAA1CxB,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,IACxBwB,EAAYC,qBAAW3E,GAE7B,OACI,mCACC0E,EAAUxE,UAAU0E,KAAI,oBAAGC,WAAcC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,KAAQC,EAA9B,EAA8BA,MAA9B,IAAqCC,KAAQC,EAA7C,EAA6CA,MAAOC,EAApD,EAAoDA,KAAmBC,EAAvE,EAA4DC,QAAWD,OAAvE,OACrBN,GAAO7B,GAAO6B,GAAO5B,GACjB,eAACe,GAAD,CAAwB5B,UAAU,cAAciD,gBAAA,EAAhD,UACI,cAACpB,GAAD,UACI,qBAAKqB,IAAKH,EAAQI,IAAG,UAAKN,EAAL,YAAcC,OAEvC,eAAChB,GAAD,WACI,eAACC,GAAD,WACI,cAACC,GAAD,CAAYoB,aAAA,EAAZ,mBAA0BP,EAA1B,YAAmCC,KACnC,eAACb,GAAD,WACI,iIACA,+BAAOoB,IAAOX,GAAMY,OAAO,aAGnC,cAACpB,GAAD,UACI,cAACC,GAAD,UAAYQ,WAbND,SCbrBa,GAAY,WACrB,IAAMlB,EAAYC,qBAAW3E,GAE7B,OACI,cAAC0D,GAAD,CAAamC,IAAKnB,EAAUvE,UAA5B,SACI,cAAC2F,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,SACCjD,EAAW8B,KAAI,gBAAG7B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,IAAKC,EAA9B,EAA8BA,SAA9B,OACZ,eAACQ,GAAD,CAAuBR,SAAUA,EAAjC,UACI,cAAC2C,EAAA,EAAUE,OAAX,CAAkBC,GAAIrC,IAAKhB,OAAQG,SAAUA,EAA7C,SACKC,IAEL,cAAC8C,EAAA,EAAUI,SAAX,CAAoBnD,SAAUA,EAA9B,SACI,cAACgB,GAAD,UACI,cAAC,GAAD,CAAYd,IAAKA,EAAKC,IAAKA,UAN1BH,WCHhBoD,GAAQ,WACjB,IAAMzB,EAAYC,qBAAW3E,GAE7B,OACI,cAACgC,EAAA,EAAD,UACI,eAACoB,GAAD,WACI,eAACC,GAAD,WACI,cAACC,GAAD,UACI,uBACI8C,KAAK,OACLC,YAAY,mCACZC,QAAS,SAAAjG,GAAK,OAAIqE,EAAUtE,WAAWC,EAAOqE,EAAUvE,gBAGhE,cAACoD,GAAD,wEAEJ,eAACC,GAAD,WACI,cAAC,GAAD,IACA,cAACC,GAAD,2BCqCL8C,GAzDH,WACR,IAAMpG,EAAYqG,iBAA8B,MADrB,EAGOC,mBAA6B,IAHpC,mBAGpBvG,EAHoB,KAGTwG,EAHS,OAIDD,oBAAkB,GAJjB,mBAIpBE,EAJoB,KAIbC,EAJa,OAKCH,oBAAkB,GALnB,mBAKpBI,EALoB,KAKZC,EALY,KAQ3BC,qBAAU,WACNlH,EACCmH,IAAI,yCACJC,MAAK,SAAAC,GAC2B,IAAzBA,EAASC,KAAKC,QACdN,GAAU,GACVJ,EAAaW,EAASH,EAASC,KAAKG,WAEpCV,GAAS,MAGhBW,OAAM,SAACC,GAAD,OAAUA,EAAIN,UAAYM,EAAIC,UAAYb,GAAS,QAC3D,IAEH,IAAMS,EAAW,SAACF,GACd,IAAME,EAAWF,EAAKO,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAK9C,WAAWC,IAAM8C,EAAK/C,WAAWC,OACjF,OAAOuC,GAIX,OAAIV,EAEI,qCACA,cAACrF,EAAD,IACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQQ,QAAQ,0LAKvB+E,EAWD,eAAC,EAAQgB,SAAT,CAAkBnH,MAAO,CAAER,YAAWC,YAAWC,cAAjD,UACA,cAACkB,EAAD,IACI,cAAC,EAAD,IACA,cAAC,GAAD,OAZA,qCACA,cAACA,EAAD,IACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQQ,QAAQ,sDAAcC,SAAS,Q,YChDvD+F,iBAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.29fbf38e.chunk.js","sourcesContent":["import Axios, { AxiosInstance } from \"axios\";\r\n\r\nconst axios: AxiosInstance = Axios.create();\r\n\r\nexport default axios;","import { FormEvent, RefObject } from 'react';\r\nimport { createContext } from 'react';\r\nimport { IContext } from '../interfaces/interface';\r\n\r\n\r\nconst Context = createContext<IContext>({\r\n    usersList: [],\r\n    searchRef: null,\r\n    searchName: (event: FormEvent<HTMLInputElement>, searchRef: RefObject<HTMLDivElement>) => {}\r\n}); \r\n\r\nexport default Context;\r\n","import { FormEvent, RefObject } from 'react';\r\n\r\n\r\nconst searchName = (event: FormEvent<HTMLInputElement>, searchRef: RefObject<HTMLDivElement>): void => {\r\n    const node: HTMLDivElement = searchRef.current;\r\n    const inputValue: string = event.currentTarget.value;\r\n    const iterableUsers: NodeListOf<HTMLDivElement> = node.querySelectorAll('[data-text]');\r\n    \r\n    if (inputValue.trim()) {\r\n        iterableUsers.forEach((child: any): string => {\r\n            return (\r\n                child.innerText.toLowerCase().trim().indexOf(inputValue.toLowerCase().trim()) === -1 ? \r\n                    child.closest(\"[data-wrapper]\").style.display = \"none\" : \r\n                    child.closest(\"[data-wrapper]\").style.display = \"flex\"\r\n            );\r\n        });\r\n    } else {\r\n        iterableUsers.forEach((child: any): string => child.closest(\"[data-wrapper]\").style.display = \"flex\");\r\n    }\r\n}\r\n\r\nexport default searchName;","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *, *:before, *:after {\r\n        box-sizing: border-box;\r\n        font-family: 'Lato', sans-serif;\r\n        font-size: 24px;\r\n        outline: none;\r\n    }\r\n\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    table, caption, tbody, tfoot, thead, tr, th, td,\r\n    article, aside, canvas, details, embed, \r\n    figure, figcaption, footer, header, hgroup, \r\n    menu, nav, output, ruby, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    article, aside, details, figcaption, figure, \r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n\r\n    a:active {\r\n        color: inherit;\r\n    }\r\n\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n\r\n    body {\r\n        &::-webkit-scrollbar { \r\n            width: 10px;\r\n        }\r\n    \r\n        &::-webkit-scrollbar-track-piece { \r\n            background-color: gray;\r\n        }\r\n    \r\n        &::-webkit-scrollbar-thumb { \r\n            background-color: #006B53;\r\n            border-radius: 15px;\r\n            height: 100px;\r\n        }\r\n    }\r\n\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n\r\n    table {\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n    }\r\n\r\n    textarea {\r\n        &::-webkit-scrollbar { \r\n            width: 0; \r\n        }\r\n    }\r\n\r\n    time {\r\n        font-size: inherit;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\n\r\nexport const StatusMessage = styled.div`\r\n    text-align: center;\r\n    margin-top: 14vh;\r\n    font-size: 2em;\r\n\r\n    @media screen and (max-width: 770px) {\r\n        font-size: 1.3em;\r\n    }\r\n`\r\n\r\nexport const Text = styled.p`\r\n    padding: 0 1em;\r\n    font-size: 0.7em;\r\n`\r\n","import Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { IStatus } from '../../interfaces/interface';\r\n\r\nimport { StatusMessage, Text } from '../../styles/Status';\r\n\r\n\r\nexport const Status = ({ message, spinner }: IStatus): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <StatusMessage>\r\n            {spinner ?\r\n                <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n                    <span className=\"sr-only\">{message}</span>\r\n                </Spinner> \r\n            :\r\n                <Text>{message}</Text>\r\n            }\r\n            </StatusMessage>\r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    min-height: 10vh;\r\n    height: 100%;\r\n    background-color: #006B53;\r\n    margin-bottom: 1em;\r\n`\r\nexport const HeaderInner = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1em 0;\r\n`\r\n\r\nexport const InnerText = styled.span`\r\n    font-size: 2em;\r\n    font-style: italic;\r\n    padding-right: .4em;\r\n    color: #fff;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 1.2em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .8em;\r\n    }\r\n\r\n    @media screen and (max-width: 300px) {\r\n        font-size: .7em;\r\n    }\r\n`\r\n\r\nexport const InnerIcon = styled.span`\r\n    font-size: 1.6em;\r\n    \r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 1.2em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .8em;\r\n    }\r\n\r\n    @media screen and (max-width: 300px) {\r\n        font-size: .7em;\r\n    }\r\n`","import Container from 'react-bootstrap/Container';\r\n\r\nimport { \r\n    HeaderWrapper, \r\n    HeaderInner, \r\n    InnerText, \r\n    InnerIcon } from '../../styles/Header';\r\n\r\n\r\nexport const Header = (): JSX.Element => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <Container>\r\n                <HeaderInner>\r\n                    <InnerText>Найди своего пользователя!</InnerText>\r\n                    <InnerIcon role=\"img\" aria-label=\"search\">&#128270;</InnerIcon>\r\n                </HeaderInner>\r\n            </Container>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n","import { ICardsData } from \"../interfaces/interface\";\r\n\r\n\r\nexport const CARDS_DATA: Array<ICardsData> = [\r\n    {\r\n        eventKey: \"1\",\r\n        title: \"1-10\",\r\n        min: 1,\r\n        max: 10,\r\n        disabled: false\r\n    },\r\n    {\r\n        eventKey: \"2\",\r\n        title: \"11-20\",\r\n        min: 11,\r\n        max: 20,\r\n        disabled: false\r\n    },\r\n    {\r\n        eventKey: \"3\",\r\n        title: \"21-30\",\r\n        min: 21,\r\n        max: 30,\r\n        disabled: true\r\n    },\r\n    {\r\n        eventKey: \"4\",\r\n        title: \"31-40\",\r\n        min: 31,\r\n        max: 40,\r\n        disabled: true\r\n    }\r\n]\r\n","import styled, { css } from 'styled-components';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { IDisabled } from '../interfaces/interface';\r\n\r\n\r\nexport const UsersWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 4px solid rgba(128, 128, 128, .3);\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const UsersHeadings = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 8vh;\r\n    padding: 0 .6em;\r\n`\r\n\r\nexport const HeadingSearch = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 50%;\r\n\r\n    & input {\r\n        border: none;\r\n        background-color: transparent;\r\n        transition: background-color 0s 50000s;\r\n\r\n        @media screen and (max-width: 1024px) {\r\n            width: 100%;\r\n            font-size: 0.8em;\r\n        }   \r\n\r\n        &::placeholder {\r\n            font-weight: 300;\r\n        }\r\n    }\r\n`\r\n\r\nexport const HeadingFavorite = styled.span`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 40%;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 0.8em;\r\n    }\r\n`\r\n\r\nexport const UsersList = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-top: 4px solid rgba(128, 128, 128, .3);\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const ListFavorites = styled.div`\r\n\r\n`\r\n\r\nexport const ListWrapper = styled.div`\r\n    width: 60%;\r\n`\r\n\r\nexport const MyCard = styled(Card)<IDisabled>`\r\n    cursor: pointer;\r\n\r\n    & .card-header {\r\n        @media screen and (max-width: 1024px) {\r\n            font-size: .7em;\r\n            text-align: center;\r\n        }  \r\n    }\r\n\r\n    ${props => props.disabled && css`\r\n        pointer-events: none;\r\n        opacity: 60%;\r\n    `}\r\n`\r\n\r\nexport const MyCardBody = styled(Card.Body)`\r\n    padding: 0;\r\n    max-height: 100vh;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n\r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n    }\r\n`\r\n\r\nexport const CardWrapper = styled.div`\r\n    display: flex;\r\n    padding: .4em;\r\n    border-bottom: 1px solid rgba(128, 128, 128, .3);\r\n    transition: all .4s ease;\r\n    cursor: grab;\r\n    user-select: none;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: rgba(128, 128, 128, .3);\r\n    }\r\n\r\n    &:active {\r\n        cursor: grabbing;\r\n    }\r\n\r\n    &:last-child {\r\n        border-bottom: none;\r\n    }\r\n`\r\n\r\nexport const CardImg = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-right: 1em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        margin: 0;\r\n    }\r\n    \r\n    & img {\r\n        border-radius: 50%;\r\n    }\r\n`\r\n\r\nexport const CardInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n` \r\n\r\nexport const InfoInline = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const InlineName = styled.p`\r\n    font-style: italic;\r\n    margin-right: .5em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        margin-right: 0;\r\n    }    \r\n    \r\n    @media screen and (max-width: 500px) {\r\n        font-size: .7em;\r\n    }\r\n`\r\n\r\nexport const InlineRegistered = styled.p`\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .7em;\r\n    }\r\n\r\n    & span:first-child {\r\n        font-size: 1em;\r\n        font-weight: 900;\r\n\r\n        @media screen and (max-width: 500px) {\r\n            font-size: .7em;\r\n        }\r\n    }\r\n\r\n    & span:last-child {\r\n        font-size: .9em;\r\n    }\r\n`\r\n\r\nexport const InfoBlock = styled.div`\r\n    @media screen and (max-width: 1024px) {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const BlockMail = styled.p`\r\n    font-size: .9em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: .7em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .5em;\r\n    }\r\n`","import { useContext } from 'react';\r\nimport moment from 'moment';\r\nimport Context from '../../services/context';\r\n\r\nimport { ICardsProps } from '../../interfaces/interface';\r\n\r\nimport {\r\n    CardWrapper,\r\n    CardImg,\r\n    CardInfo,\r\n    InfoInline,\r\n    InlineName,\r\n    InlineRegistered,\r\n    InfoBlock,\r\n    BlockMail } from '../../styles/Users';\r\n\r\n\r\nexport const CardsItems = ({ min, max }: ICardsProps): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <>\r\n        {listProps.usersList.map(({ registered: { age, date }, email, name: { first, last }, picture: { medium } }) =>\r\n            age >= min && age <= max ?\r\n                <CardWrapper key={date} className=\"cardWrapper\" data-wrapper>\r\n                    <CardImg>\r\n                        <img src={medium} alt={`${first} ${last}`} />\r\n                    </CardImg>\r\n                    <CardInfo>\r\n                        <InfoInline>\r\n                            <InlineName data-text>{`${first} ${last}`}</InlineName>\r\n                            <InlineRegistered>\r\n                                <span>Дата регистрации: </span> \r\n                                <span>{moment(date).format('L')}</span>\r\n                            </InlineRegistered>\r\n                        </InfoInline>\r\n                        <InfoBlock>\r\n                            <BlockMail>{email}</BlockMail>\r\n                        </InfoBlock>\r\n                    </CardInfo>\r\n                </CardWrapper> : false\r\n        )}\r\n        </>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Context from '../../services/context';\r\n\r\nimport { CARDS_DATA } from '../../data/cardsData';\r\nimport { CardsItems } from './CardsItems';\r\n\r\nimport { ListWrapper, MyCard, MyCardBody } from '../../styles/Users';\r\n\r\n\r\nexport const ListCards = (): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n    \r\n    return (\r\n        <ListWrapper ref={listProps.searchRef}>\r\n            <Accordion defaultActiveKey=\"1\">\r\n            {CARDS_DATA.map(({ eventKey, title, min, max, disabled }) =>\r\n                <MyCard key={eventKey} disabled={disabled}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={eventKey}>\r\n                        {title}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={eventKey}>\r\n                        <MyCardBody>\r\n                            <CardsItems min={min} max={max} />\r\n                        </MyCardBody>\r\n                    </Accordion.Collapse>\r\n                </MyCard>\r\n            )}\r\n            </Accordion>\r\n        </ListWrapper>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport Context from '../../services/context';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport { ListCards } from './ListCards';\r\n\r\nimport { \r\n    UsersWrapper,\r\n    UsersHeadings,\r\n    HeadingSearch,\r\n    HeadingFavorite,\r\n    UsersList,\r\n    ListFavorites } from '../../styles/Users';\r\n\r\n\r\nexport const Users = (): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <Container>\r\n            <UsersWrapper>\r\n                <UsersHeadings>\r\n                    <HeadingSearch>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Поиск..\"\r\n                            onInput={event => listProps.searchName(event, listProps.searchRef)}\r\n                        />\r\n                    </HeadingSearch>\r\n                    <HeadingFavorite>Избранные</HeadingFavorite>\r\n                </UsersHeadings>\r\n                <UsersList>\r\n                    <ListCards />\r\n                    <ListFavorites>123</ListFavorites>\r\n                </UsersList>\r\n            </UsersWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useEffect, useRef } from 'react';\nimport axios from '../services/axios';\nimport Context  from '../services/context';\n\nimport searchName from './Users/searchName';\nimport { IResultData } from '../interfaces/interface';\nimport { GlobalStyle } from '../styles/GlobalStyle';\n\nimport { Status } from './Status/Status';\nimport { Header } from '../Components/Header/Header';\nimport { Users } from '../Components/Users/Users';\n\n\nconst App = (): JSX.Element => {\n    const searchRef = useRef<HTMLDivElement | null>(null);\n\n    const [usersList, setUsersList] = useState<Array<IResultData>>([]);\n    const [error, setError] = useState<boolean>(false);\n    const [loaded, setLoaded] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        axios\n        .get('https://randomuser.me/api/?results=50')\n        .then(response => {\n            if (response.data.length !== 0) {\n                setLoaded(true);\n                setUsersList(sortData(response.data.results));\n            } else {\n                setError(true);\n            }\n        })\n        .catch((err) => (err.response || err.request) && setError(true));\n    }, []); \n\n    const sortData = (data: IResultData[]): Array<IResultData> => {\n        const sortData = data.sort((prev, next) => prev.registered.age - next.registered.age);\n        return sortData;\n    }\n\n\n    if (error) {\n        return (\n            <>\n            <GlobalStyle />\n                <Header />\n                <Status message=\"Не удалось подключиться к серверу\" />\n            </>\n        )\n    } \n    \n    if (!loaded) {\n        return (\n            <>\n            <GlobalStyle />\n                <Header />\n                <Status message=\"Загружаю...\" spinner={true} />\n            </>\n        )\n    } \n\n    return (\n        <Context.Provider value={{ usersList, searchRef, searchName }}>\n        <GlobalStyle />\n            <Header />\n            <Users />\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","import { render } from 'react-dom';\n\nimport App from './Components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/fonts/lato/stylesheet.css';\n\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}