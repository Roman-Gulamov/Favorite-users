{"version":3,"sources":["services/axios.ts","services/context.ts","Components/Users/findDisabled.ts","Components/Users/searchName.ts","styles/GlobalStyle.ts","styles/Status.ts","Components/Status/Status.tsx","styles/Header.ts","Components/Header/Header.tsx","data/cardsData.ts","styles/Card.ts","Components/Users/Card.tsx","Components/Users/UsersItems.tsx","styles/ListUsers.ts","Components/Users/ListUsers.tsx","styles/ListFavorites.ts","Components/Users/ListFavorites.tsx","styles/Users.ts","Components/Users/Users.tsx","Components/App.tsx","index.tsx"],"names":["axios","Axios","create","Context","createContext","usersList","favoriteList","searchRef","searchName","heartVisibility","dragToFavorite","favoriteWrapperDrop","favoriteDragStart","favoriteDragLeave","favoriteDragOver","favoriteDrop","removeFavorite","usersDragStart","usersDragEnd","findDisabled","current","querySelectorAll","forEach","card","hideCards","length","childNodes","children","closest","classList","add","remove","insertMark","value","position","amountChar","slice","event","inputValue","currentTarget","toLowerCase","trim","iterableNames","child","search","innerText","RegExp","innerHTML","GlobalStyle","createGlobalStyle","StatusMessage","styled","div","Text","p","Status","message","spinner","Container","Spinner","animation","role","variant","className","HeaderWrapper","header","HeaderInner","InnerText","span","InnerIcon","Header","icon","faSearchLocation","size","CARDS_DATA","eventKey","title","min","max","CardWrapper","CardImg","CardInfo","InfoInline","InlineName","InlineRegistered","InfoBlock","BlockMail","Card","src","picture","medium","alt","name","first","last","data-text","moment","registered","date","format","email","UsersItems","listProps","useContext","map","age","data-wrapper","draggable","onDragStart","onDragEnd","UsersWrapper","MyCard","MyCardBody","Body","ListUsers","ref","Accordion","defaultActiveKey","Toggle","as","Collapse","FavoritesWrapper","props","css","FavoritesHearts","CardDelete","ListFavorites","onDragOver","onDragLeave","onDrop","faHeart","onClick","faTrashAlt","UsersHeadings","HeadingSearch","HeadingFavorite","UsersList","Users","type","placeholder","onInput","App","useRef","useState","setUsersList","setFavoriteList","error","setError","loaded","setLoaded","setHeartVisibility","setDragToFavorite","currentFavorite","setCurrentFavorite","currentUser","setCurrentUser","currentList","setCurrentList","useEffect","get","then","response","data","sorterData","results","catch","err","request","sort","prev","next","preventDefault","concat","filter","item","list","Provider","render","document","getElementById"],"mappings":"sPAIeA,E,OAFcC,EAAMC,SCmBpBC,EAjBCC,wBAAwB,CACpCC,UAAW,GACXC,aAAc,GACdC,UAAW,KACXC,WAAY,aACZC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAqB,aACrBC,kBAAmB,aACnBC,kBAAmB,aACnBC,iBAAkB,aAClBC,aAAc,aACdC,eAAgB,aAChBC,eAAgB,aAChBC,aAAc,eCEHC,EAjBM,SAACZ,GACgBA,EAAUa,QACgBC,iBAAiB,cAE/DC,SAAQ,SAACC,GACnB,IAAMC,EAAYD,EAAKF,iBAAiB,SAASI,OAEhDF,EAAKG,WAAWD,OAGjBF,EAAKI,SAASF,OAAS,GAAKD,GAAaD,EAAKG,WAAWD,OACrDF,EAAKK,QAAQ,SAASC,UAAUC,IAAI,YAEpCP,EAAKK,QAAQ,SAASC,UAAUE,OAAO,YALvCR,EAAKK,QAAQ,SAASC,UAAUC,IAAI,gBCoB1CE,EAAa,SAACC,EAAeC,EAAkBC,GACjD,OAAOF,EAAMG,MAAM,EAAGF,GACd,SAAWD,EAAMG,MAAMF,EAAUA,EAAWC,GAAc,UACxDF,EAAMG,MAAMF,EAAWC,IAGtB3B,EAhCI,SAAC6B,EAAoC9B,GACpD,IAAM+B,EAAqBD,EAAME,cAAcN,MAAMO,cAAcC,OAE7DC,EADuBnC,EAAUa,QACgBC,iBAAiB,eAEpEiB,EACAI,EAAcpB,SAAQ,SAACqB,GACnB,IAAIC,EAAiBD,EAAME,UAAUD,OAAOE,OAAOR,EAAW,QAE9C,IAAZM,EACAD,EAAMf,QAAQ,kBAAkBC,UAAUC,IAAI,SAE9Ca,EAAMf,QAAQ,kBAAkBC,UAAUE,OAAO,QACjDY,EAAMI,UAAYf,EAAWW,EAAME,UAAWD,EAAQN,EAAWb,YAIzEiB,EAAcpB,SAAQ,SAACqB,GACnBA,EAAMf,QAAQ,kBAAkBC,UAAUE,OAAO,QACjDY,EAAMI,UAAYJ,EAAME,aAIhC1B,EAAaZ,I,cCzBJyC,EAAcC,YAAH,q4D,gBCAXC,EAAgBC,IAAOC,IAAV,iLAUbC,EAAOF,IAAOG,EAAV,wE,OCLJC,EAAS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,QAC9B,OACI,cAACC,EAAA,EAAD,UACI,cAACR,EAAD,UACCO,EACG,cAACE,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,QAAQ,UAAlD,SACI,sBAAMC,UAAU,UAAhB,SAA2BP,MAG/B,cAACH,EAAD,UAAOG,S,gBCdVQ,EAAgBb,IAAOc,OAAV,+HAMbC,EAAcf,IAAOC,IAAV,mGAMXe,GAAYhB,IAAOiB,KAAV,sRAeTC,GAAYlB,IAAOC,IAAV,sECnBTkB,GAAS,WAClB,OACI,cAACN,EAAD,UACI,cAACN,EAAA,EAAD,UACI,eAACQ,EAAD,WACI,cAACC,GAAD,4JACA,cAACE,GAAD,UACI,cAAC,IAAD,CAAiBE,KAAMC,IAAkBC,KAAK,iB,kBCfzDC,GAAgC,CACzC,CACIC,SAAU,IACVC,MAAO,OACPC,IAAK,EACLC,IAAK,IAET,CACIH,SAAU,IACVC,MAAO,QACPC,IAAK,GACLC,IAAK,IAET,CACIH,SAAU,IACVC,MAAO,QACPC,IAAK,GACLC,IAAK,IAET,CACIH,SAAU,IACVC,MAAO,QACPC,IAAK,GACLC,IAAK,K,oBCvBAC,GAAc5B,IAAOC,IAAV,+mBAkCX4B,GAAU7B,IAAOC,IAAV,qQAeP6B,GAAW9B,IAAOC,IAAV,6EAKR8B,GAAa/B,IAAOC,IAAV,kKASV+B,GAAahC,IAAOG,EAAV,4LAUV8B,GAAmBjC,IAAOG,EAAV,kcAyBhB+B,GAAYlC,IAAOC,IAAV,0IAOTkC,GAAYnC,IAAOG,EAAV,iNC/FTiC,GAAO,SAAC,GAAyB,IAAvBhE,EAAsB,EAAtBA,KACnB,OACI,qCACA,cAACyD,GAAD,UACI,qBAAKQ,IAAKjE,EAAKkE,QAAQC,OAAQC,IAAG,UAAKpE,EAAKqE,KAAKC,MAAf,YAAwBtE,EAAKqE,KAAKE,UAExE,eAACb,GAAD,WACI,eAACC,GAAD,WACI,cAACC,GAAD,CAAYY,aAAA,EAAZ,mBAA0BxE,EAAKqE,KAAKC,MAApC,YAA6CtE,EAAKqE,KAAKE,QACvD,eAACV,GAAD,WACI,iIACA,+BAAOY,KAAOzE,EAAK0E,WAAWC,MAAMC,OAAO,aAGnD,cAACd,GAAD,UACI,cAACC,GAAD,UAAY/D,EAAK6E,iBClBpBC,GAAa,SAAC,GAA4C,IAA1CxB,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,IACxBwB,EAAYC,qBAAWpG,GAE7B,OACI,mCACCmG,EAAUjG,UAAUmG,KAAI,SAACjF,GACtB,OAAOA,EAAK0E,WAAWQ,KAAO5B,GAAOtD,EAAK0E,WAAWQ,KAAO3B,GACxD,cAACC,GAAD,CAEI2B,gBAAA,EACAC,WAAW,EACXC,YAAa,kBAAMN,EAAUrF,eAAeM,EAAM+E,EAAUjG,YAC5DwG,UAAW,SAACxE,GAAD,OAAWiE,EAAUpF,aAAamB,IALjD,SAOI,cAAC,GAAD,CAAMd,KAAMA,KANPA,EAAK0E,WAAWC,YCd5BY,GAAe3D,IAAOC,IAAV,6CAIZ2D,GAAS5D,YAAOoC,KAAPpC,CAAH,+RAgBN6D,GAAa7D,YAAOoC,KAAK0B,KAAZ9D,CAAH,8KCbV+D,GAAY,WACrB,IAAMZ,EAAYC,qBAAWpG,GAE7B,OACI,cAAC2G,GAAD,CAAcK,IAAKb,EAAU/F,UAA7B,SACI,cAAC6G,GAAA,EAAD,CAAWC,iBAAiB,IAA5B,SACC3C,GAAW8B,KAAI,gBAAG7B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,IAAzB,OACZ,eAACiC,GAAD,WACI,cAACK,GAAA,EAAUE,OAAX,CAAkBC,GAAIhC,KAAKjB,OAAQK,SAAUA,EAA7C,SACKC,IAEL,cAACwC,GAAA,EAAUI,SAAX,CAAoB7C,SAAUA,EAA9B,SACI,cAACqC,GAAD,UACI,cAAC,GAAD,CAAYnC,IAAKA,EAAKC,IAAKA,UAN1BH,WCdhB8C,GAAmBtE,IAAOC,IAAV,uSAavB,SAAAsE,GAAK,OAAIA,EAAMhH,gBAAkBiH,YAAxB,sGAMFC,GAAkBzE,IAAOC,IAAV,iXAoBtB,SAAAsE,GAAK,OAAIA,EAAMjH,iBAAmBkH,YAAzB,4DAKFE,GAAa1E,IAAOC,IAAV,ieClCV0E,GAAgB,WACzB,IAAMxB,EAAYC,qBAAWpG,GAE7B,OACI,eAACsH,GAAD,CACI/G,eAAgB4F,EAAU5F,eAC1BqH,WAAY,SAAC1F,GAAD,OAAWiE,EAAUxF,iBAAiBuB,IAClD2F,YAAa,SAAC3F,GAAD,OAAWiE,EAAUzF,kBAAkBwB,IACpD4F,OAAQ,SAAC5F,GAAD,OAAWiE,EAAU3F,oBAAoB0B,IAJrD,UAMI,cAACuF,GAAD,CAAiBnH,gBAAiB6F,EAAU7F,gBAA5C,SACI,cAAC,IAAD,CAAiB8D,KAAM2D,IAASzD,KAAK,SAExC6B,EAAUhG,aAAakG,KAAI,SAACjF,GAAD,OACxB,eAACwD,GAAD,CAEI4B,WAAW,EACXC,YAAa,kBAAMN,EAAU1F,kBAAkBW,IAC/CyG,YAAa,SAAC3F,GAAD,OAAWiE,EAAUzF,kBAAkBwB,IACpD0F,WAAY,SAAC1F,GAAD,OAAWiE,EAAUxF,iBAAiBuB,IAClD4F,OAAQ,SAAC5F,GAAD,OAAWiE,EAAUvF,aAAasB,EAAOd,IANrD,UAQI,cAAC,GAAD,CAAMA,KAAMA,IACZ,cAACsG,GAAD,CAAYM,QAAS,kBAAM7B,EAAUtF,eAAeO,IAApD,SACI,cAAC,IAAD,CAAiBgD,KAAM6D,IAAY3D,KAAK,WATvClD,EAAK0E,WAAWC,aC1B5BY,GAAe3D,IAAOC,IAAV,gLAQZiF,GAAgBlF,IAAOC,IAAV,iJAQbkF,GAAgBnF,IAAOC,IAAV,ocAsBbmF,GAAkBpF,IAAOiB,KAAV,6MAWfoE,GAAYrF,IAAOC,IAAV,wJCrCTqF,GAAQ,WACjB,IAAMnC,EAAYC,qBAAWpG,GAE7B,OACI,cAACuD,EAAA,EAAD,UACI,eAAC,GAAD,WACI,eAAC2E,GAAD,WACI,cAACC,GAAD,UACI,uBACII,KAAK,OACLC,YAAY,mCACZC,QAAS,SAAAvG,GAAK,OACViE,EAAU9F,WAAW6B,EAAOiE,EAAU/F,gBAIlD,cAACgI,GAAD,wEAEJ,eAACC,GAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,aCqILK,GA1JH,WACR,IAAMtI,EAAYuI,iBAA8B,MADrB,EAGOC,mBAA6B,IAHpC,mBAGpB1I,EAHoB,KAGT2I,EAHS,OAIaD,mBAA6B,IAJ1C,mBAIpBzI,EAJoB,KAIN2I,EAJM,OAKDF,oBAAkB,GALjB,mBAKpBG,EALoB,KAKbC,EALa,OAMCJ,oBAAkB,GANnB,mBAMpBK,EANoB,KAMZC,EANY,OAOmBN,oBAAkB,GAPrC,mBAOpBtI,EAPoB,KAOH6I,EAPG,OAQiBP,oBAAkB,GARnC,mBAQpBrI,EARoB,KAQJ6I,EARI,OASmBR,mBAA6B,MAThD,mBASpBS,EAToB,KASHC,EATG,OAUWV,mBAA6B,MAVxC,mBAUpBW,EAVoB,KAUPC,EAVO,OAWWZ,mBAAoC,MAX/C,mBAWpBa,EAXoB,KAWPC,EAXO,KAc3BC,qBAAU,WACN9J,EACC+J,IAAI,0CACJC,MAAK,SAAAC,GAC2B,IAAzBA,EAASC,KAAKzI,QACd4H,GAAU,GACVL,EAAamB,EAAWF,EAASC,KAAKE,UACtCjJ,EAAaZ,IAEb4I,GAAS,MAGhBkB,OAAM,SAACC,GAAD,OAAUA,EAAIL,UAAYK,EAAIC,UAAYpB,GAAS,QAC3D,IAGH,IAwDMgB,EAAa,SAACD,GAEhB,OADiBA,EAAKM,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKxE,WAAWQ,IAAMiE,EAAKzE,WAAWQ,QAoB/ExE,EAAQ,CACV5B,YACAC,eACAC,YACAC,aACAC,kBACAC,iBACAC,oBApFwB,SAAC0B,GACzBA,EAAMsI,iBAENpB,GAAkB,GAClBD,GAAmB,GAEfM,IACAX,GAAgB,SAAAwB,GAAI,OAAIA,EAAKG,OAAOlB,MAEpCV,GAAa,SAAAyB,GAAI,OACbA,EAAKI,QAAO,SAAAC,GAAI,OAAIA,EAAK7E,WAAWC,OAASwD,EAAYzD,WAAWC,aA2E5EtF,kBAvEsB,SAACW,GACvBkI,EAAmBlI,GACnBsI,EAAe,OAsEfhJ,kBAnEsB,SAACwB,GACvBA,EAAME,cAAcV,UAAUE,OAAO,SAmErCjB,iBAhEqB,SAACuB,GACtBA,EAAMsI,iBACNtI,EAAME,cAAcV,UAAUC,IAAI,SA+DlCf,aA5DiB,SAACsB,EAAkCd,GACpDc,EAAMsI,iBACNtI,EAAME,cAAcV,UAAUE,OAAO,QAErCwH,GAAkB,GAClBD,GAAmB,GAEdM,GACDX,GAAgB,SAAAwB,GAAI,OAChBA,EAAKjE,KAAI,SAAAsE,GACL,OAAOA,EAAK7E,WAAWC,OAAS3E,EAAK0E,WAAWC,KAAzC,eACCsD,GAERsB,EAAK7E,WAAWC,OAASsD,EAAgBvD,WAAWC,KAApD,eACQ3E,GAEJuJ,SA6ChB9J,eAxCmB,SAACO,GACpB0H,GAAgB,SAAAwB,GAAI,OAChBA,EAAKI,QAAO,SAAAC,GAAI,OAAIA,EAAK7E,WAAWC,OAAS3E,EAAK0E,WAAWC,WAEjE8C,GAAa,SAAAyB,GAAI,OAAIA,EAAKG,OAAOrJ,OAqCjCN,eA5BmB,SAACM,EAAmBwJ,GACvCzB,GAAmB,GACnBC,GAAkB,GAElBI,EAAepI,GACfsI,EAAekB,IAwBf7J,aArBiB,SAACmB,GAClBA,EAAMsI,iBAENpB,GAAkB,GAClBD,GAAmB,KAqBvB,OAAIJ,EAEI,qCACA,cAAClG,EAAD,IACI,cAAC,GAAD,IACA,cAAC,EAAD,CAAQQ,QAAQ,0LAKvB4F,EAWD,eAAC,EAAQ4B,SAAT,CAAkB/I,MAAOA,EAAzB,UACA,cAACe,EAAD,IACI,cAAC,GAAD,IACA,cAAC,GAAD,OAZA,qCACA,cAACA,EAAD,IACI,cAAC,GAAD,IACA,cAAC,EAAD,CAAQQ,QAAQ,sDAAcC,SAAS,Q,YClJvDwH,iBAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.37dcf0ff.chunk.js","sourcesContent":["import Axios, { AxiosInstance } from \"axios\";\r\n\r\nconst axios: AxiosInstance = Axios.create();\r\n\r\nexport default axios;","import { createContext } from 'react';\r\nimport { IContext } from '../interfaces/interface';\r\n\r\n\r\nconst Context = createContext<IContext>({\r\n    usersList: [],\r\n    favoriteList: [],\r\n    searchRef: null,\r\n    searchName: () => {},\r\n    heartVisibility: false,\r\n    dragToFavorite: false,\r\n    favoriteWrapperDrop: () => {},\r\n    favoriteDragStart: () => {}, \r\n    favoriteDragLeave: () => {}, \r\n    favoriteDragOver: () => {}, \r\n    favoriteDrop: () => {},\r\n    removeFavorite: () => {},\r\n    usersDragStart: () => {},\r\n    usersDragEnd: () => {},\r\n}); \r\n\r\nexport default Context;\r\n","import { RefObject } from \"react\";\r\n\r\n\r\nconst findDisabled = (searchRef: RefObject<HTMLDivElement>) => {\r\n    const accordion: HTMLDivElement = searchRef.current;\r\n    const iterableCards: NodeListOf<HTMLDivElement> = accordion.querySelectorAll('.card-body');\r\n\r\n    iterableCards.forEach((card: HTMLDivElement): void => {\r\n        const hideCards = card.querySelectorAll('.hide').length;\r\n        \r\n        !card.childNodes.length ?\r\n            card.closest('.card').classList.add('disabled') \r\n            :\r\n        card.children.length > 0 && hideCards >= card.childNodes.length ? \r\n            card.closest('.card').classList.add('disabled') \r\n            :\r\n            card.closest('.card').classList.remove('disabled');\r\n    });\r\n}\r\n\r\nexport default findDisabled;","import { FormEvent, RefObject } from 'react';\r\n\r\nimport findDisabled from './findDisabled';\r\n\r\n\r\nconst searchName = (event: FormEvent<HTMLInputElement>, searchRef: RefObject<HTMLDivElement>): void => {\r\n    const inputValue: string = event.currentTarget.value.toLowerCase().trim();\r\n    const node: HTMLDivElement = searchRef.current;\r\n    const iterableNames: NodeListOf<HTMLDivElement> = node.querySelectorAll('[data-text]');\r\n\r\n    if (inputValue) {\r\n        iterableNames.forEach((child: HTMLDivElement): void => {\r\n            let search: number = child.innerText.search(RegExp(inputValue,\"gi\"));\r\n\r\n            if (search === -1) {\r\n                child.closest(\"[data-wrapper]\").classList.add('hide');\r\n            } else {\r\n                child.closest(\"[data-wrapper]\").classList.remove('hide');\r\n                child.innerHTML = insertMark(child.innerText, search, inputValue.length);\r\n            }\r\n        });\r\n    } else {\r\n        iterableNames.forEach((child: HTMLDivElement) => {\r\n            child.closest(\"[data-wrapper]\").classList.remove('hide');\r\n            child.innerHTML = child.innerText;\r\n        });\r\n    }\r\n\r\n    findDisabled(searchRef);\r\n}\r\n\r\nconst insertMark = (value: string, position: number, amountChar: number): string => {\r\n    return value.slice(0, position) + \r\n            '<mark>' + value.slice(position, position + amountChar) + '</mark>' \r\n            + value.slice(position + amountChar)\r\n}\r\n\r\nexport default searchName;","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *, *:before, *:after {\r\n        box-sizing: border-box;\r\n        font-family: 'Lato', sans-serif;\r\n        font-size: 24px;\r\n        outline: none;\r\n    }\r\n\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    table, caption, tbody, tfoot, thead, tr, th, td,\r\n    article, aside, canvas, details, embed, \r\n    figure, figcaption, footer, header, hgroup, \r\n    menu, nav, output, ruby, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    article, aside, details, figcaption, figure, \r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n\r\n    a:active {\r\n        color: inherit;\r\n    }\r\n\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n\r\n    body {\r\n        &::-webkit-scrollbar { \r\n            width: 10px;\r\n        }\r\n    \r\n        &::-webkit-scrollbar-track-piece { \r\n            background-color: gray;\r\n        }\r\n    \r\n        &::-webkit-scrollbar-thumb { \r\n            background-color: #006B53;\r\n            border-radius: 15px;\r\n            height: 100px;\r\n        }\r\n    }\r\n\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n\r\n    mark {\r\n        background-color: #006B53;\r\n        color: #fff;\r\n    }\r\n\r\n    table {\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n    }\r\n\r\n    textarea {\r\n        &::-webkit-scrollbar { \r\n            width: 0; \r\n        }\r\n    }\r\n\r\n    time {\r\n        font-size: inherit;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\n\r\nexport const StatusMessage = styled.div`\r\n    text-align: center;\r\n    margin-top: 14vh;\r\n    font-size: 2em;\r\n\r\n    @media screen and (max-width: 770px) {\r\n        font-size: 1.3em;\r\n    }\r\n`\r\n\r\nexport const Text = styled.p`\r\n    padding: 0 1em;\r\n    font-size: 0.7em;\r\n`\r\n","import Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { IStatus } from '../../interfaces/interface';\r\n\r\nimport { StatusMessage, Text } from '../../styles/Status';\r\n\r\n\r\nexport const Status = ({ message, spinner }: IStatus): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <StatusMessage>\r\n            {spinner ?\r\n                <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n                    <span className=\"sr-only\">{message}</span>\r\n                </Spinner> \r\n            :\r\n                <Text>{message}</Text>\r\n            }\r\n            </StatusMessage>\r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    min-height: 10vh;\r\n    height: 100%;\r\n    background-color: #006B53;\r\n    margin-bottom: 1em;\r\n`\r\nexport const HeaderInner = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1em 0;\r\n`\r\n\r\nexport const InnerText = styled.span`\r\n    font-size: 2em;\r\n    font-style: italic;\r\n    padding-right: .4em;\r\n    color: #fff;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 1.2em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .8em;\r\n    }\r\n`\r\n\r\nexport const InnerIcon = styled.div`\r\n    & svg {\r\n        color: #fff;\r\n    }\r\n`","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearchLocation } from '@fortawesome/free-solid-svg-icons';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport { \r\n    HeaderWrapper, \r\n    HeaderInner, \r\n    InnerText, \r\n    InnerIcon } from '../../styles/Header';\r\n\r\n\r\nexport const Header = (): JSX.Element => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <Container>\r\n                <HeaderInner>\r\n                    <InnerText>Найди своего пользователя!</InnerText>\r\n                    <InnerIcon>\r\n                        <FontAwesomeIcon icon={faSearchLocation} size='lg' />\r\n                    </InnerIcon>\r\n                </HeaderInner>\r\n            </Container>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n","import { ICardsData } from \"../interfaces/interface\";\r\n\r\n\r\nexport const CARDS_DATA: Array<ICardsData> = [\r\n    {\r\n        eventKey: \"1\",\r\n        title: \"1-10\",\r\n        min: 1,\r\n        max: 10\r\n    },\r\n    {\r\n        eventKey: \"2\",\r\n        title: \"11-20\",\r\n        min: 11,\r\n        max: 20\r\n    },\r\n    {\r\n        eventKey: \"3\",\r\n        title: \"21-30\",\r\n        min: 21,\r\n        max: 30\r\n    },\r\n    {\r\n        eventKey: \"4\",\r\n        title: \"31-40\",\r\n        min: 31,\r\n        max: 40\r\n    }\r\n]\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const CardWrapper = styled.div`\r\n    display: flex;\r\n    padding: .4em;\r\n    border-bottom: 1px solid rgba(128, 128, 128, .3);\r\n    transition: all .4s ease;\r\n    cursor: grab;\r\n    user-select: none;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: rgba(128, 128, 128, .3);\r\n    }\r\n\r\n    &:active {\r\n        cursor: grabbing;\r\n    }\r\n\r\n    &:last-child {\r\n        border-bottom: none;\r\n    }   \r\n\r\n    &.hide {\r\n        display: none;\r\n    }\r\n\r\n    &.gray {\r\n        background-color: rgba(128, 128, 128, .3);\r\n    }\r\n`\r\n\r\nexport const CardImg = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-right: .5em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        margin: 0;\r\n    }\r\n    \r\n    & img {\r\n        border-radius: 50%;\r\n    }\r\n`\r\n\r\nexport const CardInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n` \r\n\r\nexport const InfoInline = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const InlineName = styled.p`\r\n    font-style: italic;\r\n    margin-right: .5em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: .7em;\r\n        margin-right: 0;\r\n    }    \r\n`\r\n\r\nexport const InlineRegistered = styled.p`\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: .7em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .7em;\r\n    }\r\n\r\n    & span:first-child {\r\n        font-size: 1em;\r\n        font-weight: 900;\r\n\r\n        @media screen and (max-width: 500px) {\r\n            font-size: .7em;\r\n        }\r\n    }\r\n\r\n    & span:last-child {\r\n        font-size: .9em;\r\n    }\r\n`\r\n\r\nexport const InfoBlock = styled.div`\r\n    @media screen and (max-width: 1200px) {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const BlockMail = styled.p`\r\n    font-size: .9em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: .5em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .5em;\r\n    }\r\n`","import moment from 'moment';\r\nimport { ICardData } from '../../interfaces/interface';\r\n\r\nimport {\r\n    CardImg,\r\n    CardInfo,\r\n    InfoInline,\r\n    InlineName,\r\n    InlineRegistered,\r\n    InfoBlock,\r\n    BlockMail } from '../../styles/Card';\r\n\r\n\r\nexport const Card = ({ card }: ICardData) => {\r\n    return (\r\n        <>\r\n        <CardImg>\r\n            <img src={card.picture.medium} alt={`${card.name.first} ${card.name.last}`} />\r\n        </CardImg>\r\n        <CardInfo>\r\n            <InfoInline>\r\n                <InlineName data-text>{`${card.name.first} ${card.name.last}`}</InlineName>\r\n                <InlineRegistered>\r\n                    <span>Дата регистрации: </span> \r\n                    <span>{moment(card.registered.date).format('L')}</span>\r\n                </InlineRegistered>\r\n            </InfoInline>\r\n            <InfoBlock>\r\n                <BlockMail>{card.email}</BlockMail>\r\n            </InfoBlock>\r\n        </CardInfo>\r\n        </>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport Context from '../../services/context';\r\n\r\nimport { Card } from './Card';\r\nimport { ICardsProps } from '../../interfaces/interface';\r\n\r\nimport { CardWrapper } from '../../styles/Card';\r\n\r\n\r\n\r\nexport const UsersItems = ({ min, max }: ICardsProps): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <>\r\n        {listProps.usersList.map((card) => {\r\n            return card.registered.age >= min && card.registered.age <= max &&\r\n                <CardWrapper \r\n                    key={card.registered.date} \r\n                    data-wrapper \r\n                    draggable={true}\r\n                    onDragStart={() => listProps.usersDragStart(card, listProps.usersList)}\r\n                    onDragEnd={(event) => listProps.usersDragEnd(event)}\r\n                >\r\n                    <Card card={card} />\r\n                </CardWrapper>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nexport const UsersWrapper = styled.div`\r\n    width: 50%;\r\n`\r\n\r\nexport const MyCard = styled(Card)`\r\n    cursor: pointer;\r\n\r\n    &.disabled {\r\n        pointer-events: none;\r\n        opacity: 60%;\r\n    }\r\n\r\n    & .card-header {\r\n        @media screen and (max-width: 1024px) {\r\n            font-size: .7em;\r\n            text-align: center;\r\n        }  \r\n    }\r\n`\r\n\r\nexport const MyCardBody = styled(Card.Body)`\r\n    padding: 0;\r\n    max-height: 100vh;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n\r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n    }\r\n`","import { useContext } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Context from '../../services/context';\r\n\r\nimport { CARDS_DATA } from '../../data/cardsData';\r\nimport { UsersItems } from './UsersItems';\r\n\r\nimport { UsersWrapper, MyCard, MyCardBody } from '../../styles/ListUsers';\r\n\r\n\r\nexport const ListUsers = (): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n    \r\n    return (\r\n        <UsersWrapper ref={listProps.searchRef}>\r\n            <Accordion defaultActiveKey=\"1\">\r\n            {CARDS_DATA.map(({ eventKey, title, min, max }) =>\r\n                <MyCard key={eventKey}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={eventKey}>\r\n                        {title}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={eventKey}>\r\n                        <MyCardBody>\r\n                            <UsersItems min={min} max={max} />\r\n                        </MyCardBody>\r\n                    </Accordion.Collapse>\r\n                </MyCard>\r\n            )}\r\n            </Accordion>\r\n        </UsersWrapper>\r\n    )\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { IDragToFavorite, IHeartVisibility } from '../interfaces/interface';\r\n\r\n\r\nexport const FavoritesWrapper = styled.div<IDragToFavorite>`\r\n    position: relative;\r\n    width: 50%;\r\n    max-height: 1090px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    transition: all .1s ease;\r\n    border-left: 1px solid rgba(128, 128, 128, .3);\r\n\r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n    }\r\n\r\n    ${props => props.dragToFavorite && css`\r\n        border-radius: 10px;\r\n        border: 3px dashed #006B53;\r\n    `}\r\n`\r\n\r\nexport const FavoritesHearts = styled.div<IHeartVisibility>`\r\n    display: none;\r\n    position: absolute;\r\n    left: 43%;\r\n    top: 23%;\r\n    opacity: 60%;\r\n    transition: all .1s ease;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        left: 41%;\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        left: 35%;\r\n    }\r\n    \r\n    & svg {\r\n        color: palevioletred;\r\n    }\r\n\r\n    ${props => props.heartVisibility && css`\r\n        display: block;\r\n    `}\r\n`\r\n\r\nexport const CardDelete = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    margin-right: 1em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        margin-right: 0;\r\n        margin-top: .4em;\r\n    }\r\n\r\n    & svg {\r\n        transition: all .4s ease;\r\n\r\n        &:hover {\r\n            color: #006B53;\r\n            transform: scale(1.2);\r\n        }\r\n\r\n        &:active {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n`","import { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport Context from '../../services/context';\r\n\r\nimport { Card } from './Card';\r\n\r\nimport { CardWrapper } from '../../styles/Card';\r\nimport { \r\n    FavoritesWrapper, \r\n    FavoritesHearts, \r\n    CardDelete } from '../../styles/ListFavorites';\r\n\r\n\r\nexport const ListFavorites = () => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <FavoritesWrapper\r\n            dragToFavorite={listProps.dragToFavorite}\r\n            onDragOver={(event) => listProps.favoriteDragOver(event)}\r\n            onDragLeave={(event) => listProps.favoriteDragLeave(event)}\r\n            onDrop={(event) => listProps.favoriteWrapperDrop(event)}\r\n        >\r\n            <FavoritesHearts heartVisibility={listProps.heartVisibility}>\r\n                <FontAwesomeIcon icon={faHeart} size='3x' />\r\n            </FavoritesHearts>\r\n            {listProps.favoriteList.map((card) =>\r\n                <CardWrapper\r\n                    key={card.registered.date}\r\n                    draggable={true}\r\n                    onDragStart={() => listProps.favoriteDragStart(card)}\r\n                    onDragLeave={(event) => listProps.favoriteDragLeave(event)}\r\n                    onDragOver={(event) => listProps.favoriteDragOver(event)}\r\n                    onDrop={(event) => listProps.favoriteDrop(event, card)}\r\n                >\r\n                    <Card card={card} />\r\n                    <CardDelete onClick={() => listProps.removeFavorite(card)}>\r\n                        <FontAwesomeIcon icon={faTrashAlt} size='1x' />\r\n                    </CardDelete>\r\n                </CardWrapper>\r\n            )}\r\n        </FavoritesWrapper>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const UsersWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 4px solid rgba(128, 128, 128, .3);\r\n    border-radius: 10px;\r\n    margin-bottom: 1em;\r\n`\r\n\r\nexport const UsersHeadings = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: stretch;\r\n    height: 8vh;\r\n    padding: 0 .6em;\r\n`\r\n\r\nexport const HeadingSearch = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 50%;\r\n\r\n    & input {\r\n        border: none;\r\n        background-color: transparent;\r\n        transition: background-color 0s 50000s;\r\n\r\n        @media screen and (max-width: 1024px) {\r\n            width: 100%;\r\n            font-size: 0.8em;\r\n        }   \r\n\r\n        &::placeholder {\r\n            font-weight: 300;\r\n        }\r\n    }\r\n`\r\n\r\nexport const HeadingFavorite = styled.span`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 40%;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 0.8em;\r\n    }\r\n`\r\n\r\nexport const UsersList = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-top: 4px solid rgba(128, 128, 128, .3);\r\n    border-radius: 10px;\r\n`","import { useContext } from 'react';\r\nimport Context from '../../services/context';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport { ListUsers } from './ListUsers';\r\nimport { ListFavorites } from './ListFavorites';\r\n\r\nimport { \r\n    UsersWrapper,\r\n    UsersHeadings,\r\n    HeadingSearch,\r\n    HeadingFavorite,\r\n    UsersList } from '../../styles/Users';\r\n\r\n\r\nexport const Users = (): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <Container>\r\n            <UsersWrapper>\r\n                <UsersHeadings>\r\n                    <HeadingSearch>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Поиск..\"\r\n                            onInput={event =>\r\n                                listProps.searchName(event, listProps.searchRef)\r\n                            }\r\n                        />\r\n                    </HeadingSearch>\r\n                    <HeadingFavorite>Избранные</HeadingFavorite>\r\n                </UsersHeadings>\r\n                <UsersList>\r\n                    <ListUsers />\r\n                    <ListFavorites />\r\n                </UsersList>\r\n            </UsersWrapper>\r\n        </Container>\r\n    )\r\n}","import { useState, useEffect, useRef, DragEvent } from 'react';\nimport axios from '../services/axios';\nimport Context  from '../services/context';\n\nimport findDisabled from './Users/findDisabled';\nimport searchName from './Users/searchName';\nimport { IResultData } from '../interfaces/interface';\nimport { GlobalStyle } from '../styles/GlobalStyle';\n\nimport { Status } from './Status/Status';\nimport { Header } from '../Components/Header/Header';\nimport { Users } from '../Components/Users/Users';\n\n\nconst App = (): JSX.Element => {\n    const searchRef = useRef<HTMLDivElement | null>(null);\n\n    const [usersList, setUsersList] = useState<Array<IResultData>>([]);\n    const [favoriteList, setFavoriteList] = useState<Array<IResultData>>([]);\n    const [error, setError] = useState<boolean>(false);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [heartVisibility, setHeartVisibility] = useState<boolean>(false);\n    const [dragToFavorite, setDragToFavorite] = useState<boolean>(false);\n    const [currentFavorite, setCurrentFavorite] = useState<IResultData | null>(null);\n    const [currentUser, setCurrentUser] = useState<IResultData | null>(null);\n    const [currentList, setCurrentList] = useState<Array<IResultData> | null>(null);\n\n\n    useEffect(() => {\n        axios\n        .get('https://randomuser.me/api/?results=500')\n        .then(response => {\n            if (response.data.length !== 0) {\n                setLoaded(true);\n                setUsersList(sorterData(response.data.results));\n                findDisabled(searchRef);\n            } else {\n                setError(true);\n            }\n        })\n        .catch((err) => (err.response || err.request) && setError(true));\n    }, []); \n\n\n    const favoriteWrapperDrop = (event: DragEvent<HTMLDivElement>): void => {\n        event.preventDefault();\n\n        setDragToFavorite(false);\n        setHeartVisibility(false);\n\n        if (currentList) {\n            setFavoriteList(prev => prev.concat(currentUser));\n        \n            setUsersList(prev => \n                prev.filter(item => item.registered.date !== currentUser.registered.date));\n        }\n    }\n\n    const favoriteDragStart = (card: IResultData): void => {\n        setCurrentFavorite(card);\n        setCurrentList(null);\n    }\n\n    const favoriteDragLeave = (event: DragEvent<HTMLDivElement>): void => {\n        event.currentTarget.classList.remove('gray');\n    }\n\n    const favoriteDragOver = (event: DragEvent<HTMLDivElement>): void => {\n        event.preventDefault();\n        event.currentTarget.classList.add('gray');\n    }\n\n    const favoriteDrop = (event: DragEvent<HTMLDivElement>, card: IResultData): void => {\n        event.preventDefault();\n        event.currentTarget.classList.remove('gray');\n\n        setDragToFavorite(false);\n        setHeartVisibility(false);\n        \n        if (!currentList) {\n            setFavoriteList(prev => \n                prev.map(item => {\n                    return item.registered.date === card.registered.date ?\n                        {...currentFavorite}\n                    :\n                    item.registered.date === currentFavorite.registered.date ?\n                        {...card}\n                    :\n                        item;\n            }))\n        }\n    }\n\n    const removeFavorite = (card: IResultData): void => {\n        setFavoriteList(prev => \n            prev.filter(item => item.registered.date !== card.registered.date));\n\n        setUsersList(prev => prev.concat(card));\n    }\n\n    const sorterData = (data: IResultData[]): Array<IResultData> => {\n        const sortData = data.sort((prev, next) => prev.registered.age - next.registered.age);\n        return sortData;\n    }\n\n\n    const usersDragStart = (card: IResultData, list: Array<IResultData>): void => {\n        setHeartVisibility(true);\n        setDragToFavorite(true);\n\n        setCurrentUser(card);\n        setCurrentList(list);\n    }\n\n    const usersDragEnd = (event: DragEvent<HTMLDivElement>): void => {\n        event.preventDefault();\n\n        setDragToFavorite(false);\n        setHeartVisibility(false);\n    }\n\n    const value = {\n        usersList,\n        favoriteList,\n        searchRef, \n        searchName,\n        heartVisibility,\n        dragToFavorite,\n        favoriteWrapperDrop,\n        favoriteDragStart, \n        favoriteDragLeave, \n        favoriteDragOver, \n        favoriteDrop,\n        removeFavorite,\n        usersDragStart,\n        usersDragEnd\n    }\n\n\n    if (error) {\n        return (\n            <>\n            <GlobalStyle />\n                <Header />\n                <Status message=\"Не удалось подключиться к серверу\" />\n            </>\n        )\n    } \n    \n    if (!loaded) {\n        return (\n            <>\n            <GlobalStyle />\n                <Header />\n                <Status message=\"Загружаю...\" spinner={true} />\n            </>\n        )\n    } \n\n    return (\n        <Context.Provider value={value}>\n        <GlobalStyle />\n            <Header />\n            <Users />\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","import { render } from 'react-dom';\n\nimport App from './Components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/fonts/lato/stylesheet.css';\n\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}