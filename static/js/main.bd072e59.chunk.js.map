{"version":3,"sources":["services/axios.ts","services/context.ts","Components/Users/findDisabled.ts","Components/Users/searchName.ts","styles/GlobalStyle.ts","styles/Status.ts","Components/Status/Status.tsx","styles/Header.ts","Components/Header/Header.tsx","data/cardsData.ts","styles/CardsItems.ts","Components/Users/CardsItems.tsx","styles/ListCards.ts","Components/Users/ListCards.tsx","styles/Users.ts","Components/Users/Users.tsx","Components/App.tsx","index.tsx"],"names":["axios","Axios","create","Context","createContext","usersList","searchRef","searchName","event","heartVisibility","dragToFavorite","dragStartHandler","card","dragLeaveHandler","dragEndHandler","dragOverHandler","dropHandler","findDisabled","current","querySelectorAll","forEach","hideCards","length","childNodes","children","closest","classList","add","remove","insertMark","value","position","amountChar","slice","inputValue","currentTarget","toLowerCase","trim","iterableNames","child","search","innerText","RegExp","innerHTML","GlobalStyle","createGlobalStyle","StatusMessage","styled","div","Text","p","Status","message","spinner","Container","Spinner","animation","role","variant","className","HeaderWrapper","header","HeaderInner","InnerText","span","InnerIcon","Header","aria-label","CARDS_DATA","eventKey","title","min","max","CardWrapper","CardImg","CardInfo","InfoInline","InlineName","InlineRegistered","InfoBlock","BlockMail","CardsItems","listProps","useContext","map","registered","age","data-wrapper","draggable","onDragStart","onDragLeave","onDragEnd","onDragOver","onDrop","src","picture","medium","alt","name","first","last","data-text","moment","date","format","email","ListWrapper","MyCard","Card","MyCardBody","Body","ListCards","ref","Accordion","defaultActiveKey","Toggle","as","Collapse","UsersWrapper","UsersHeadings","HeadingSearch","HeadingFavorite","UsersList","ListFavorites","props","css","FavoritesHearts","Users","type","placeholder","onInput","App","useRef","useState","setUsersList","error","setError","loaded","setLoaded","setHeartVisibility","setDragToFavorite","useEffect","get","then","response","data","sortData","results","catch","err","request","sort","prev","next","Provider","preventDefault","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd072e59.chunk.js","sourcesContent":["import Axios, { AxiosInstance } from \"axios\";\r\n\r\nconst axios: AxiosInstance = Axios.create();\r\n\r\nexport default axios;","import { createContext } from 'react';\r\nimport { IContext } from '../interfaces/interface';\r\n\r\n\r\nconst Context = createContext<IContext>({\r\n    usersList: [],\r\n    searchRef: null,\r\n    searchName: (event, searchRef) => {},\r\n    heartVisibility: false,\r\n    dragToFavorite: false,\r\n    dragStartHandler: (event, card) => {}, \r\n    dragLeaveHandler: (event) => {}, \r\n    dragEndHandler: (event) => {}, \r\n    dragOverHandler: (event) => {}, \r\n    dropHandler: (event, card) => {}\r\n}); \r\n\r\nexport default Context;\r\n","import { RefObject } from \"react\";\r\n\r\n\r\nconst findDisabled = (searchRef: RefObject<HTMLDivElement>) => {\r\n    const accordion: HTMLDivElement = searchRef.current;\r\n    const iterableCards: NodeListOf<HTMLDivElement> = accordion.querySelectorAll('.card-body');\r\n\r\n    iterableCards.forEach((card: HTMLDivElement): void => {\r\n        const hideCards = card.querySelectorAll('.hide').length;\r\n        \r\n        !card.childNodes.length ?\r\n            card.closest('.card').classList.add('disabled') \r\n            :\r\n        card.children.length > 0 && hideCards >= card.childNodes.length ? \r\n            card.closest('.card').classList.add('disabled') \r\n            :\r\n            card.closest('.card').classList.remove('disabled');\r\n    });\r\n}\r\n\r\nexport default findDisabled;","import { FormEvent, RefObject } from 'react';\r\n\r\nimport findDisabled from './findDisabled';\r\n\r\n\r\nconst searchName = (event: FormEvent<HTMLInputElement>, searchRef: RefObject<HTMLDivElement>): void => {\r\n    const inputValue: string = event.currentTarget.value.toLowerCase().trim();\r\n    const node: HTMLDivElement = searchRef.current;\r\n    const iterableNames: NodeListOf<HTMLDivElement> = node.querySelectorAll('[data-text]');\r\n\r\n    if (inputValue) {\r\n        iterableNames.forEach((child: HTMLDivElement): void => {\r\n            let search: number = child.innerText.search(RegExp(inputValue,\"gi\"));\r\n\r\n            if (search === -1) {\r\n                child.closest(\"[data-wrapper]\").classList.add('hide');\r\n            } else {\r\n                child.closest(\"[data-wrapper]\").classList.remove('hide');\r\n                child.innerHTML = insertMark(child.innerText, search, inputValue.length);\r\n            }\r\n        });\r\n    } else {\r\n        iterableNames.forEach((child: HTMLDivElement) => {\r\n            child.closest(\"[data-wrapper]\").classList.remove('hide');\r\n            child.innerHTML = child.innerText;\r\n        });\r\n    }\r\n\r\n    findDisabled(searchRef);\r\n}\r\n\r\nconst insertMark = (value: string, position: number, amountChar: number): string => {\r\n    return value.slice(0, position) + \r\n            '<mark>' + value.slice(position, position + amountChar) + '</mark>' \r\n            + value.slice(position + amountChar)\r\n}\r\n\r\nexport default searchName;","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *, *:before, *:after {\r\n        box-sizing: border-box;\r\n        font-family: 'Lato', sans-serif;\r\n        font-size: 24px;\r\n        outline: none;\r\n    }\r\n\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    table, caption, tbody, tfoot, thead, tr, th, td,\r\n    article, aside, canvas, details, embed, \r\n    figure, figcaption, footer, header, hgroup, \r\n    menu, nav, output, ruby, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    article, aside, details, figcaption, figure, \r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n\r\n    a:active {\r\n        color: inherit;\r\n    }\r\n\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n\r\n    body {\r\n        &::-webkit-scrollbar { \r\n            width: 10px;\r\n        }\r\n    \r\n        &::-webkit-scrollbar-track-piece { \r\n            background-color: gray;\r\n        }\r\n    \r\n        &::-webkit-scrollbar-thumb { \r\n            background-color: #006B53;\r\n            border-radius: 15px;\r\n            height: 100px;\r\n        }\r\n    }\r\n\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n\r\n    mark {\r\n        background-color: #006B53;\r\n        color: #fff;\r\n    }\r\n\r\n    table {\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n    }\r\n\r\n    textarea {\r\n        &::-webkit-scrollbar { \r\n            width: 0; \r\n        }\r\n    }\r\n\r\n    time {\r\n        font-size: inherit;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\n\r\nexport const StatusMessage = styled.div`\r\n    text-align: center;\r\n    margin-top: 14vh;\r\n    font-size: 2em;\r\n\r\n    @media screen and (max-width: 770px) {\r\n        font-size: 1.3em;\r\n    }\r\n`\r\n\r\nexport const Text = styled.p`\r\n    padding: 0 1em;\r\n    font-size: 0.7em;\r\n`\r\n","import Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { IStatus } from '../../interfaces/interface';\r\n\r\nimport { StatusMessage, Text } from '../../styles/Status';\r\n\r\n\r\nexport const Status = ({ message, spinner }: IStatus): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <StatusMessage>\r\n            {spinner ?\r\n                <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n                    <span className=\"sr-only\">{message}</span>\r\n                </Spinner> \r\n            :\r\n                <Text>{message}</Text>\r\n            }\r\n            </StatusMessage>\r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    min-height: 10vh;\r\n    height: 100%;\r\n    background-color: #006B53;\r\n    margin-bottom: 1em;\r\n`\r\nexport const HeaderInner = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1em 0;\r\n`\r\n\r\nexport const InnerText = styled.span`\r\n    font-size: 2em;\r\n    font-style: italic;\r\n    padding-right: .4em;\r\n    color: #fff;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 1.2em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .8em;\r\n    }\r\n\r\n    @media screen and (max-width: 300px) {\r\n        font-size: .7em;\r\n    }\r\n`\r\n\r\nexport const InnerIcon = styled.span`\r\n    font-size: 1.6em;\r\n    \r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 1.2em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .8em;\r\n    }\r\n\r\n    @media screen and (max-width: 300px) {\r\n        font-size: .7em;\r\n    }\r\n`","import Container from 'react-bootstrap/Container';\r\n\r\nimport { \r\n    HeaderWrapper, \r\n    HeaderInner, \r\n    InnerText, \r\n    InnerIcon } from '../../styles/Header';\r\n\r\n\r\nexport const Header = (): JSX.Element => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <Container>\r\n                <HeaderInner>\r\n                    <InnerText>Найди своего пользователя!</InnerText>\r\n                    <InnerIcon role=\"img\" aria-label=\"search\">&#128270;</InnerIcon>\r\n                </HeaderInner>\r\n            </Container>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n","import { ICardsData } from \"../interfaces/interface\";\r\n\r\n\r\nexport const CARDS_DATA: Array<ICardsData> = [\r\n    {\r\n        eventKey: \"1\",\r\n        title: \"1-10\",\r\n        min: 1,\r\n        max: 10\r\n    },\r\n    {\r\n        eventKey: \"2\",\r\n        title: \"11-20\",\r\n        min: 11,\r\n        max: 20\r\n    },\r\n    {\r\n        eventKey: \"3\",\r\n        title: \"21-30\",\r\n        min: 21,\r\n        max: 30\r\n    },\r\n    {\r\n        eventKey: \"4\",\r\n        title: \"31-40\",\r\n        min: 31,\r\n        max: 40\r\n    }\r\n]\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const CardWrapper = styled.div`\r\n    display: flex;\r\n    padding: .4em;\r\n    border-bottom: 1px solid rgba(128, 128, 128, .3);\r\n    transition: all .4s ease;\r\n    cursor: grab;\r\n    user-select: none;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: rgba(128, 128, 128, .3);\r\n    }\r\n\r\n    &:active {\r\n        cursor: grabbing;\r\n    }\r\n\r\n    &:last-child {\r\n        border-bottom: none;\r\n    }   \r\n\r\n    &.hide {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const CardImg = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-right: 1em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        margin: 0;\r\n    }\r\n    \r\n    & img {\r\n        border-radius: 50%;\r\n    }\r\n`\r\n\r\nexport const CardInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n` \r\n\r\nexport const InfoInline = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const InlineName = styled.p`\r\n    font-style: italic;\r\n    margin-right: .5em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        margin-right: 0;\r\n    }    \r\n    \r\n    @media screen and (max-width: 500px) {\r\n        font-size: .7em;\r\n    }\r\n`\r\n\r\nexport const InlineRegistered = styled.p`\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .7em;\r\n    }\r\n\r\n    & span:first-child {\r\n        font-size: 1em;\r\n        font-weight: 900;\r\n\r\n        @media screen and (max-width: 500px) {\r\n            font-size: .7em;\r\n        }\r\n    }\r\n\r\n    & span:last-child {\r\n        font-size: .9em;\r\n    }\r\n`\r\n\r\nexport const InfoBlock = styled.div`\r\n    @media screen and (max-width: 1024px) {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const BlockMail = styled.p`\r\n    font-size: .9em;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: .7em;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: .5em;\r\n    }\r\n`","import { useContext } from 'react';\r\nimport moment from 'moment';\r\nimport Context from '../../services/context';\r\n\r\nimport { ICardsProps } from '../../interfaces/interface';\r\n\r\nimport {\r\n    CardWrapper,\r\n    CardImg,\r\n    CardInfo,\r\n    InfoInline,\r\n    InlineName,\r\n    InlineRegistered,\r\n    InfoBlock,\r\n    BlockMail } from '../../styles/CardsItems';\r\n\r\n\r\nexport const CardsItems = ({ min, max }: ICardsProps): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <>\r\n        {listProps.usersList.map((card) =>\r\n            card.registered.age >= min && card.registered.age <= max ?\r\n                <CardWrapper \r\n                    key={card.registered.date} \r\n                    data-wrapper \r\n                    draggable={true}\r\n                    onDragStart={(event: any) => listProps.dragStartHandler(event, card)}\r\n                    onDragLeave={(event: any) => listProps.dragLeaveHandler(event)}\r\n                    onDragEnd={(event: any) => listProps.dragEndHandler(event)}\r\n                    onDragOver={(event: any) => listProps.dragOverHandler(event)}\r\n                    onDrop={(event: any) => listProps.dropHandler(event, card)}\r\n                >\r\n                    <CardImg>\r\n                        <img src={card.picture.medium} alt={`${card.name.first} ${card.name.last}`} />\r\n                    </CardImg>\r\n                    <CardInfo>\r\n                        <InfoInline>\r\n                            <InlineName data-text>{`${card.name.first} ${card.name.last}`}</InlineName>\r\n                            <InlineRegistered>\r\n                                <span>Дата регистрации: </span> \r\n                                <span>{moment(card.registered.date).format('L')}</span>\r\n                            </InlineRegistered>\r\n                        </InfoInline>\r\n                        <InfoBlock>\r\n                            <BlockMail>{card.email}</BlockMail>\r\n                        </InfoBlock>\r\n                    </CardInfo>\r\n                </CardWrapper> : false\r\n        )}\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nexport const ListWrapper = styled.div`\r\n    width: 60%;\r\n`\r\n\r\nexport const MyCard = styled(Card)`\r\n    cursor: pointer;\r\n\r\n    &.disabled {\r\n        pointer-events: none;\r\n        opacity: 60%;\r\n    }\r\n\r\n    & .card-header {\r\n        @media screen and (max-width: 1024px) {\r\n            font-size: .7em;\r\n            text-align: center;\r\n        }  \r\n    }\r\n`\r\n\r\nexport const MyCardBody = styled(Card.Body)`\r\n    padding: 0;\r\n    max-height: 100vh;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n\r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n    }\r\n`","import { useContext } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Context from '../../services/context';\r\n\r\nimport { CARDS_DATA } from '../../data/cardsData';\r\nimport { CardsItems } from './CardsItems';\r\n\r\nimport { ListWrapper, MyCard, MyCardBody } from '../../styles/ListCards';\r\n\r\n\r\nexport const ListCards = (): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n    \r\n    return (\r\n        <ListWrapper ref={listProps.searchRef}>\r\n            <Accordion defaultActiveKey=\"1\">\r\n            {CARDS_DATA.map(({ eventKey, title, min, max }) =>\r\n                <MyCard key={eventKey}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={eventKey}>\r\n                        {title}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={eventKey}>\r\n                        <MyCardBody>\r\n                            <CardsItems min={min} max={max} />\r\n                        </MyCardBody>\r\n                    </Accordion.Collapse>\r\n                </MyCard>\r\n            )}\r\n            </Accordion>\r\n        </ListWrapper>\r\n    )\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { IDragToFavorite, IHeartVisibility } from '../interfaces/interface';\r\n\r\n\r\nexport const UsersWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 4px solid rgba(128, 128, 128, .3);\r\n    border-radius: 10px;\r\n    margin-bottom: 1em;\r\n`\r\n\r\nexport const UsersHeadings = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 8vh;\r\n    padding: 0 .6em;\r\n`\r\n\r\nexport const HeadingSearch = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 50%;\r\n\r\n    & input {\r\n        border: none;\r\n        background-color: transparent;\r\n        transition: background-color 0s 50000s;\r\n\r\n        @media screen and (max-width: 1024px) {\r\n            width: 100%;\r\n            font-size: 0.8em;\r\n        }   \r\n\r\n        &::placeholder {\r\n            font-weight: 300;\r\n        }\r\n    }\r\n`\r\n\r\nexport const HeadingFavorite = styled.span`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 40%;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        font-size: 0.8em;\r\n    }\r\n`\r\n\r\nexport const UsersList = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-top: 4px solid rgba(128, 128, 128, .3);\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const ListFavorites = styled.div<IDragToFavorite>`\r\n    position: relative;\r\n    width: 40%;\r\n    transition: all .1s ease;\r\n\r\n    ${props => props.dragToFavorite && css`\r\n        border-radius: 10px;\r\n        border: 3px dashed #006B53;\r\n    `}\r\n`\r\n\r\nexport const FavoritesHearts = styled.span<IHeartVisibility>`\r\n    display: none;\r\n    position: absolute;\r\n    left: 40%;\r\n    top: 23%;\r\n    font-size: 2em;\r\n    transition: all .1s ease;\r\n\r\n    ${props => props.heartVisibility && css`\r\n        display: block;\r\n    `}\r\n`","import { useContext } from 'react';\r\nimport Context from '../../services/context';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport { ListCards } from './ListCards';\r\n\r\nimport { \r\n    UsersWrapper,\r\n    UsersHeadings,\r\n    HeadingSearch,\r\n    HeadingFavorite,\r\n    UsersList,\r\n    ListFavorites,\r\n    FavoritesHearts } from '../../styles/Users';\r\n\r\n\r\nexport const Users = (): JSX.Element => {\r\n    const listProps = useContext(Context);\r\n\r\n    return (\r\n        <Container>\r\n            <UsersWrapper>\r\n                <UsersHeadings>\r\n                    <HeadingSearch>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Поиск..\"\r\n                            onInput={event =>\r\n                                listProps.searchName(event, listProps.searchRef)\r\n                            }\r\n                        />\r\n                    </HeadingSearch>\r\n                    <HeadingFavorite>Избранные</HeadingFavorite>\r\n                </UsersHeadings>\r\n                <UsersList>\r\n                    <ListCards />\r\n                    <ListFavorites \r\n                        dragToFavorite={listProps.dragToFavorite}\r\n                    >\r\n                        123\r\n                        <FavoritesHearts \r\n                            heartVisibility={listProps.heartVisibility} \r\n                            role=\"img\" \r\n                            aria-label=\"heart\"\r\n                        > &#128154;\r\n                        </FavoritesHearts>\r\n                    </ListFavorites>\r\n                </UsersList>\r\n            </UsersWrapper>\r\n        </Container>\r\n    )\r\n}","import { useState, useEffect, useRef, DragEvent } from 'react';\nimport axios from '../services/axios';\nimport Context  from '../services/context';\n\nimport findDisabled from './Users/findDisabled';\nimport searchName from './Users/searchName';\nimport { IResultData } from '../interfaces/interface';\nimport { GlobalStyle } from '../styles/GlobalStyle';\n\nimport { Status } from './Status/Status';\nimport { Header } from '../Components/Header/Header';\nimport { Users } from '../Components/Users/Users';\n\n\nconst App = (): JSX.Element => {\n    const searchRef = useRef<HTMLDivElement | null>(null);\n\n    const [usersList, setUsersList] = useState<Array<IResultData>>([]);\n    const [error, setError] = useState<boolean>(false);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [heartVisibility, setHeartVisibility] = useState<boolean>(false);\n    const [dragToFavorite, setDragToFavorite] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        axios\n        .get('https://randomuser.me/api/?results=50')\n        .then(response => {\n            if (response.data.length !== 0) {\n                setLoaded(true);\n                setUsersList(sortData(response.data.results));\n                findDisabled(searchRef);\n            } else {\n                setError(true);\n            }\n        })\n        .catch((err) => (err.response || err.request) && setError(true));\n    }, []); \n\n\n    const sortData = (data: IResultData[]): Array<IResultData> => {\n        const sortData = data.sort((prev, next) => prev.registered.age - next.registered.age);\n        return sortData;\n    }\n\n\n    const dragStartHandler = (event: DragEvent<HTMLDivElement>, card: IResultData) => {\n        setDragToFavorite(true);\n        setHeartVisibility(true);\n    }\n\n    const dragLeaveHandler = (event: DragEvent<HTMLDivElement>) => {\n        \n    }\n\n    const dragEndHandler = (event: DragEvent<HTMLDivElement>) => {\n        setDragToFavorite(false);\n        setHeartVisibility(false);\n    }\n\n    const dragOverHandler = (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    }\n\n    const dropHandler = (event: DragEvent<HTMLDivElement>, card: IResultData) => {\n        event.preventDefault();\n    }\n\n\n    if (error) {\n        return (\n            <>\n            <GlobalStyle />\n                <Header />\n                <Status message=\"Не удалось подключиться к серверу\" />\n            </>\n        )\n    } \n    \n    if (!loaded) {\n        return (\n            <>\n            <GlobalStyle />\n                <Header />\n                <Status message=\"Загружаю...\" spinner={true} />\n            </>\n        )\n    } \n\n    return (\n        <Context.Provider value={{ \n            usersList, \n            searchRef, \n            searchName,\n            heartVisibility,\n            dragToFavorite,\n            dragStartHandler, \n            dragLeaveHandler, \n            dragEndHandler, \n            dragOverHandler, \n            dropHandler\n        }}>\n        <GlobalStyle />\n            <Header />\n            <Users />\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","import { render } from 'react-dom';\n\nimport App from './Components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/fonts/lato/stylesheet.css';\n\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}